import 'package:enum_to_string/enum_to_string.dart';

import '../../utils/enums/activity_feed_type.dart';
import 'app_profile.dart';
import 'event.dart';
import 'post.dart';
import 'post_comment.dart';

class ActivityFeed {

  String id;
  String ownerId; ///Owner of activity feed
  String profileId; /// Reference to profile if needed
  String profileName; ///
  String profileImgUrl;
  String message;

  String activityReferenceId;
  ActivityFeedType?  activityFeedType;
  String mediaUrl;
  int createdTime;
  bool unread;

  ActivityFeed({
      this.id = "",
      this.ownerId = "",
      this.profileId = "",
      this.profileName = "",
      this.profileImgUrl = "",
      this.message = "",
      this.activityReferenceId = "",
      this.activityFeedType,
      this.mediaUrl = "",
      this.createdTime = 0,
      this.unread = true
  });

  ActivityFeed.fromJSON(data) :
        id = data["id"] ?? "",
        ownerId = data["ownerId"] ?? "",
        profileId = data["profileId"] ?? "",
        profileName = data["profileName"] ?? "",
        profileImgUrl = data["profileImgUrl"] ?? "",
        message = data["message"] ?? "",
        activityReferenceId = data["activityReferenceId"] ?? "",
        activityFeedType = EnumToString.fromString(ActivityFeedType.values, data["activityFeedType"] ?? ActivityFeedType.comment.name),
        mediaUrl = data["mediaUrl"] ?? "",
        createdTime = data["createdTime"] ?? 0,
        unread = data["unread"] ?? true;

  Map<String, dynamic>  toJSON()=>{
//    'id': id, //generated by firebase
    'ownerId': ownerId,
    'profileId': profileId,
    'profileName': profileName,
    'profileImgUrl': profileImgUrl,
    'message': message,
    'activityReferenceId': activityReferenceId,
    'activityFeedType': activityFeedType?.name ?? "",
    'mediaUrl': mediaUrl,
    'createdTime': createdTime,
    'unread': unread,
  };

  Map<String, dynamic>  toJSONWithId()=>{
    'id': id,
    'ownerId': ownerId,
    'profileId': profileId,
    'profileName': profileName,
    'profileImgUrl': profileImgUrl,
    'message': message,
    'activityReferenceId': activityReferenceId,
    'activityFeedType': activityFeedType?.name ?? "",
    'mediaUrl': mediaUrl,
    'createdTime': createdTime,
    'unread': unread,
  };

  ActivityFeed.fromEvent({required Event event, required AppProfile fromProfile,
    required ActivityFeedType type, String msg = ''}) :
        id = '',
        ownerId = event.owner!.id,
        activityReferenceId = event.id,
        mediaUrl = event.imgUrl,
        profileId = fromProfile.id,
        profileName = fromProfile.name,
        profileImgUrl = fromProfile.photoUrl,
        activityFeedType = type,
        createdTime = DateTime.now().millisecondsSinceEpoch,
        message = msg,
        unread = true;

  ActivityFeed.fromPost({required Post post, required AppProfile fromProfile,
    required ActivityFeedType type, String msg = ''}) :
        id = '',
        ownerId = post.ownerId,
        activityReferenceId = post.id,
        mediaUrl = post.mediaUrl,
        profileId = fromProfile.id,
        profileName = fromProfile.name,
        profileImgUrl = fromProfile.photoUrl,
        activityFeedType = type,
        createdTime = DateTime.now().millisecondsSinceEpoch,
        message = msg,
        unread = true;

  ActivityFeed.fromComment({required PostComment comment, required ActivityFeedType type,
    AppProfile? fromProfile, String? mediaUrl}) :
        id = '',
        ownerId = comment.ownerId,
        activityReferenceId = comment.postId,
        mediaUrl = mediaUrl ?? comment.mediaUrl,
        profileId = fromProfile?.id ?? comment.ownerId,
        profileName = fromProfile?.name ?? comment.ownerName,
        profileImgUrl = fromProfile?.photoUrl ?? comment.ownerImgUrl,
        activityFeedType = type,
        createdTime = DateTime.now().millisecondsSinceEpoch,
        message = comment.text,
        unread = true;

}
