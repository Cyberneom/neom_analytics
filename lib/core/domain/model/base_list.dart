import 'dart:convert';

import 'package:enum_to_string/enum_to_string.dart';
import 'package:geolocator/geolocator.dart';

import '../../utils/core_utilities.dart';
import '../../utils/enums/owner_type.dart';

class BaseList {

  String id; ///Generated by firestore or third-party playlist Id
  String name;
  String description;
  String ownerId;
  String ownerName;
  OwnerType ownerType;
  String href; ///Reference to something in future
  String imgUrl;
  bool public;
  Position? position;
  bool isModifiable;

  BaseList({
    this.id = "",
    this.name = "",
    this.description = "",
    this.ownerId = "",
    this.ownerName = "",
    this.ownerType = OwnerType.profile,
    this.href = "",
    this.imgUrl = "",
    this.public = true,
    this.position,
    this.isModifiable = true,
  });


  BaseList.fromJSON(data) :
    id = data["id"] ?? "",
    name = data["name"] ?? "",
    description = data["description"] ?? "",
    href = data["href"] ?? "",
    imgUrl = data["imgUrl"] ?? "",
    public = data["public"] ?? true,
    isModifiable = data["isModifiable"] ?? true,
    ownerId = data["ownerId"] ?? "",
    ownerName = data["ownerName"] ?? "",
    position = CoreUtilities.JSONtoPosition(data["position"]),
    ownerType = EnumToString.fromString(OwnerType.values, data["ownerType"] ?? OwnerType.profile.name) ?? OwnerType.profile;


  @override
  String toString() {
    return 'BaseList{id: $id, name: $name, description: $description, ownerId: $ownerId, ownerName: $ownerName, ownerType: $ownerType, href: $href, imgUrl: $imgUrl, public: $public, position: $position, isModifiable: $isModifiable}';
  }

  Map<String, dynamic>  toJSON()=>{
    //'id': id, generated in firebase
    'name': name,
    'description': description,
    'href': href,
    'imgUrl': imgUrl,
    'ownerId': ownerId,
    'public': public,
    'position': jsonEncode(position),
    'ownerType': ownerType.name,
    'isModifiable': isModifiable
  };

  Map<String, dynamic>  toJSONWithID()=>{
    'id': id,
    'name': name,
    'description': description,
    'href': href,
    'imgUrl': imgUrl,
    'ownerId': ownerId,
    'public': public,
    'position': jsonEncode(position),
    'ownerType': ownerType.name,
    'isModifiable': isModifiable
  };

}
