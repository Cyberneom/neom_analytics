import 'dart:convert';

import 'package:enum_to_string/enum_to_string.dart';
import 'package:geolocator/geolocator.dart';

import '../../utils/core_utilities.dart';
import '../../utils/enums/post_type.dart';
import 'post_comment.dart';

class Post {

  String id;
  String ownerId;
  String profileName;
  String profileImgUrl;
  String caption;

  PostType type;
  String mediaUrl ;
  String thumbnailUrl;
  int createdTime;
  int modifiedTime;
  Position? position;
  String location;

  List<String> likedProfiles;
  List<String> sharedProfiles;
  List<String> mentionedProfiles;

  List<String> hashtags;

  String mediaOwner;  //For future copyright references
  String referenceId;

  bool isCommentEnabled;
  bool isPrivate;
  bool isDraft;
  bool isHidden;
  bool isVerified;

  List<String> commentIds;
  List<PostComment> comments;

  Post({
    this.id = "",
    this.ownerId = "",
    this.profileName = "",
    this.profileImgUrl = "",
    this.caption = "",
    this.type = PostType.caption,
    this.mediaUrl = "",
    this.thumbnailUrl = "",
    this.createdTime = 0,
    this.modifiedTime = 0,
    this.position,
    this.location = "",
    this.likedProfiles = const [],
    this.sharedProfiles = const [],
    this.commentIds = const [],
    this.comments = const [],
    this.hashtags = const [],
    this.mentionedProfiles = const [],
    this.isCommentEnabled = true,
    this.isPrivate = false,
    this.isDraft = false,
    this.isHidden = false,
    this.isVerified = false,
    this.referenceId = "",
    this.mediaOwner = ""});


  @override
  String toString() {
    return 'Post{id: $id, ownerId: $ownerId, profileName: $profileName, profileImgUrl: $profileImgUrl, caption: $caption, type: $type, mediaUrl: $mediaUrl, thumbnailUrl: $thumbnailUrl, createdTime: $createdTime, modifiedTime: $modifiedTime, position: $position, location: $location, likedProfiles: $likedProfiles, sharedProfiles: $sharedProfiles, mentionedProfiles: $mentionedProfiles, hashtags: $hashtags, mediaOwner: $mediaOwner, referenceId: $referenceId, isCommentEnabled: $isCommentEnabled, isPrivate: $isPrivate, isDraft: $isDraft, isHidden: $isHidden, isVerified: $isVerified, commentIds: $commentIds, comments: $comments}';
  }

  Post.fromJSON(data) :
        id = data["id"] ?? "",
        ownerId = data["ownerId"] ?? "",
        profileName = data["profileName"] ?? "",
        profileImgUrl = data["profileImgUrl"] ?? "",
        caption = data["caption"] ?? "",
        type = EnumToString.fromString(PostType.values, data["type"] ?? PostType.caption.name) ?? PostType.caption,
        mediaUrl = data["mediaUrl"] ?? "",
        thumbnailUrl = data["thumbnailUrl"] ?? "",
        createdTime = data["createdTime"] ?? 0,
        modifiedTime = data["modifiedTime"] ?? 0,
        position = CoreUtilities.JSONtoPosition(data["position"]),
        location = data["location"] ?? "",
        likedProfiles = List.from(data["likedProfiles"] ?? []),
        sharedProfiles = List.from(data["sharedProfiles"] ?? []),
        mentionedProfiles = List.from(data["mentionedProfiles"] ?? []),
        commentIds = List.from(data["commentIds"] ?? []),
        comments = [],
        hashtags = List.from(data["hashtags"] ?? []),
        isCommentEnabled = data["isCommentEnabled"] ?? true,
        isPrivate = data["isPrivate"] ?? false,
        isDraft = data["isDraft"] ?? false,
        isHidden = data["isHidden"] ?? false,
        isVerified = data['isVerified'] ?? false,
        mediaOwner = data["mediaOwner"] ?? "",
        referenceId = data["referenceId"] ?? "";

  Map<String, dynamic> toJSON()=>{
    //'id': id, //generated by firebase
    'ownerId': ownerId,
    'profileName': profileName,
    'profileImgUrl': profileImgUrl,
    'caption': caption,
    'type': type.name,
    'mediaUrl': mediaUrl,
    'thumbnailUrl': thumbnailUrl,
    'createdTime': createdTime,
    'modifiedTime': modifiedTime,
    'position': jsonEncode(position),
    'location': location,
    'likedProfiles': likedProfiles,
    'sharedProfiles': sharedProfiles,
    'mentionedProfiles': mentionedProfiles,
    'commentIds': commentIds,
    'hashtags': hashtags,
    'isCommentEnabled': isCommentEnabled,
    'isPrivate': isPrivate,
    'isDraft': isDraft,
    'isHidden': isHidden,
    'isVerified': isVerified,
    'mediaOwner': mediaOwner,
    'referenceId': referenceId,
  };

  Post.createClone(Post post) :
    id = post.id,
    ownerId = post.ownerId,
    profileName = post.profileName,
    profileImgUrl = post.profileImgUrl,
    caption = post.caption,
    type = post.type,
    mediaUrl = post.mediaUrl,
    thumbnailUrl = post.thumbnailUrl,
    createdTime = post.createdTime,
    modifiedTime = post.modifiedTime,
    position = post.position,
    location = post.location,
    likedProfiles = post.likedProfiles,
    sharedProfiles = post.sharedProfiles,
    mentionedProfiles = post.mentionedProfiles,
    commentIds = post.commentIds,
    comments = post.comments,
    hashtags = post.hashtags,
    isCommentEnabled = post.isCommentEnabled,
    isPrivate = post.isPrivate,
    isDraft = post.isDraft,
    isHidden = post.isHidden,
    isVerified = post.isVerified,
    mediaOwner = post.mediaOwner,
    referenceId = post.referenceId;

}
